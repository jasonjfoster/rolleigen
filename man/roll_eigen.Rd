% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rolleigen.R
\name{roll_eigen}
\alias{roll_eigen}
\title{Rolling Eigenvalues and Eigenvectors}
\usage{
roll_eigen(x, width, weights = rep(1, width), center = TRUE,
  scale = FALSE, order = TRUE, min_obs = width, complete_obs = TRUE,
  na_restore = FALSE, online = TRUE)
}
\arguments{
\item{x}{vector or matrix. Rows are observations and columns are variables.}

\item{width}{integer. Window size.}

\item{weights}{vector. Weights for each observation within a window.}

\item{center}{logical. If \code{TRUE} then the weighted mean of each variable is used,
if \code{FALSE} then zero is used.}

\item{scale}{logical. If \code{TRUE} then the weighted standard deviation of each variable is used,
if \code{FALSE} then no scaling is done.}

\item{order}{logical. Change sign and order of the components.}

\item{min_obs}{integer. Minimum number of observations required to have a value within a window,
otherwise result is \code{NA}.}

\item{complete_obs}{logical. If \code{TRUE} then rows containing any missing values are removed,
if \code{FALSE} then pairwise is used.}

\item{na_restore}{logical. Should missing values be restored?}

\item{online}{logical. Process observations using an online algorithm.}
}
\value{
A list containing the following components:
\item{values}{An object of the same class and dimension as \code{x} with the rolling and expanding
eigenvalues.}
\item{vectors}{A cube with each slice the rolling and expanding eigenvectors.}
}
\description{
A function for computing the rolling and expanding eigenvalues and eigenvectors of time-series data.
}
\examples{
n <- 15
m <- 3
x <- matrix(rnorm(n * m), nrow = n, ncol = m)
weights <- 0.9 ^ (n:1)

# rolling eigenvalues and eigenvectors with complete windows
roll_eigen(x, width = 5)

# rolling eigenvalues and eigenvectors with partial windows
roll_eigen(x, width = 5, min_obs = 1)

# expanding eigenvalues and eigenvectors with partial windows
roll_eigen(x, width = n, min_obs = 1)

# expanding eigenvalues and eigenvectors with partial windows and weights
roll_eigen(x, width = n, min_obs = 1, weights = weights)
}
